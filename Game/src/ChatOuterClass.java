// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Chat.proto


public final class ChatOuterClass {
  private ChatOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ChatUserOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ChatUser)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 游戏角色ID 必要
     * </pre>
     *
     * <code>int64 player_id = 1;</code>
     */
    long getPlayerId();

    /**
     * <pre>
     * 用户ID, 必要
     * </pre>
     *
     * <code>int64 user_id = 2;</code>
     */
    long getUserId();

    /**
     * <pre>
     * 角色昵称 必要
     * </pre>
     *
     * <code>string nickname = 3;</code>
     */
    String getNickname();
    /**
     * <pre>
     * 角色昵称 必要
     * </pre>
     *
     * <code>string nickname = 3;</code>
     */
    com.google.protobuf.ByteString
        getNicknameBytes();

    /**
     * <pre>
     * 角色等级，必要
     * </pre>
     *
     * <code>int32 level = 4;</code>
     */
    int getLevel();

    /**
     * <pre>
     * 角色VIP等级 非必要
     * </pre>
     *
     * <code>int32 vip_level = 5;</code>
     */
    int getVipLevel();

    /**
     * <pre>
     * 角色战力值 非必要
     * </pre>
     *
     * <code>int64 power = 6;</code>
     */
    long getPower();
  }
  /**
   * Protobuf type {@code ChatUser}
   */
  public  static final class ChatUser extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ChatUser)
      ChatUserOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChatUser.newBuilder() to construct.
    private ChatUser(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChatUser() {
      playerId_ = 0L;
      userId_ = 0L;
      nickname_ = "";
      level_ = 0;
      vipLevel_ = 0;
      power_ = 0L;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChatUser(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              playerId_ = input.readInt64();
              break;
            }
            case 16: {

              userId_ = input.readInt64();
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              nickname_ = s;
              break;
            }
            case 32: {

              level_ = input.readInt32();
              break;
            }
            case 40: {

              vipLevel_ = input.readInt32();
              break;
            }
            case 48: {

              power_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ChatOuterClass.internal_static_ChatUser_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ChatOuterClass.internal_static_ChatUser_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ChatUser.class, Builder.class);
    }

    public static final int PLAYER_ID_FIELD_NUMBER = 1;
    private long playerId_;
    /**
     * <pre>
     * 游戏角色ID 必要
     * </pre>
     *
     * <code>int64 player_id = 1;</code>
     */
    public long getPlayerId() {
      return playerId_;
    }

    public static final int USER_ID_FIELD_NUMBER = 2;
    private long userId_;
    /**
     * <pre>
     * 用户ID, 必要
     * </pre>
     *
     * <code>int64 user_id = 2;</code>
     */
    public long getUserId() {
      return userId_;
    }

    public static final int NICKNAME_FIELD_NUMBER = 3;
    private volatile Object nickname_;
    /**
     * <pre>
     * 角色昵称 必要
     * </pre>
     *
     * <code>string nickname = 3;</code>
     */
    public String getNickname() {
      Object ref = nickname_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        nickname_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 角色昵称 必要
     * </pre>
     *
     * <code>string nickname = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNicknameBytes() {
      Object ref = nickname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        nickname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LEVEL_FIELD_NUMBER = 4;
    private int level_;
    /**
     * <pre>
     * 角色等级，必要
     * </pre>
     *
     * <code>int32 level = 4;</code>
     */
    public int getLevel() {
      return level_;
    }

    public static final int VIP_LEVEL_FIELD_NUMBER = 5;
    private int vipLevel_;
    /**
     * <pre>
     * 角色VIP等级 非必要
     * </pre>
     *
     * <code>int32 vip_level = 5;</code>
     */
    public int getVipLevel() {
      return vipLevel_;
    }

    public static final int POWER_FIELD_NUMBER = 6;
    private long power_;
    /**
     * <pre>
     * 角色战力值 非必要
     * </pre>
     *
     * <code>int64 power = 6;</code>
     */
    public long getPower() {
      return power_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (playerId_ != 0L) {
        output.writeInt64(1, playerId_);
      }
      if (userId_ != 0L) {
        output.writeInt64(2, userId_);
      }
      if (!getNicknameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, nickname_);
      }
      if (level_ != 0) {
        output.writeInt32(4, level_);
      }
      if (vipLevel_ != 0) {
        output.writeInt32(5, vipLevel_);
      }
      if (power_ != 0L) {
        output.writeInt64(6, power_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (playerId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, playerId_);
      }
      if (userId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, userId_);
      }
      if (!getNicknameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, nickname_);
      }
      if (level_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, level_);
      }
      if (vipLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, vipLevel_);
      }
      if (power_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, power_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ChatUser)) {
        return super.equals(obj);
      }
      ChatUser other = (ChatUser) obj;

      boolean result = true;
      result = result && (getPlayerId()
          == other.getPlayerId());
      result = result && (getUserId()
          == other.getUserId());
      result = result && getNickname()
          .equals(other.getNickname());
      result = result && (getLevel()
          == other.getLevel());
      result = result && (getVipLevel()
          == other.getVipLevel());
      result = result && (getPower()
          == other.getPower());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PLAYER_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPlayerId());
      hash = (37 * hash) + USER_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUserId());
      hash = (37 * hash) + NICKNAME_FIELD_NUMBER;
      hash = (53 * hash) + getNickname().hashCode();
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getLevel();
      hash = (37 * hash) + VIP_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getVipLevel();
      hash = (37 * hash) + POWER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPower());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ChatUser parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ChatUser parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ChatUser parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ChatUser parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ChatUser parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ChatUser parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ChatUser parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ChatUser parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ChatUser parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ChatUser parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ChatUser parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ChatUser parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ChatUser prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ChatUser}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ChatUser)
        ChatUserOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ChatOuterClass.internal_static_ChatUser_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ChatOuterClass.internal_static_ChatUser_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ChatUser.class, Builder.class);
      }

      // Construct using ares.logic.msg.checker.ChatOuterClass.ChatUser.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        playerId_ = 0L;

        userId_ = 0L;

        nickname_ = "";

        level_ = 0;

        vipLevel_ = 0;

        power_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ChatOuterClass.internal_static_ChatUser_descriptor;
      }

      public ChatUser getDefaultInstanceForType() {
        return ChatUser.getDefaultInstance();
      }

      public ChatUser build() {
        ChatUser result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ChatUser buildPartial() {
        ChatUser result = new ChatUser(this);
        result.playerId_ = playerId_;
        result.userId_ = userId_;
        result.nickname_ = nickname_;
        result.level_ = level_;
        result.vipLevel_ = vipLevel_;
        result.power_ = power_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ChatUser) {
          return mergeFrom((ChatUser)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ChatUser other) {
        if (other == ChatUser.getDefaultInstance()) return this;
        if (other.getPlayerId() != 0L) {
          setPlayerId(other.getPlayerId());
        }
        if (other.getUserId() != 0L) {
          setUserId(other.getUserId());
        }
        if (!other.getNickname().isEmpty()) {
          nickname_ = other.nickname_;
          onChanged();
        }
        if (other.getLevel() != 0) {
          setLevel(other.getLevel());
        }
        if (other.getVipLevel() != 0) {
          setVipLevel(other.getVipLevel());
        }
        if (other.getPower() != 0L) {
          setPower(other.getPower());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ChatUser parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ChatUser) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long playerId_ ;
      /**
       * <pre>
       * 游戏角色ID 必要
       * </pre>
       *
       * <code>int64 player_id = 1;</code>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <pre>
       * 游戏角色ID 必要
       * </pre>
       *
       * <code>int64 player_id = 1;</code>
       */
      public Builder setPlayerId(long value) {
        
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 游戏角色ID 必要
       * </pre>
       *
       * <code>int64 player_id = 1;</code>
       */
      public Builder clearPlayerId() {
        
        playerId_ = 0L;
        onChanged();
        return this;
      }

      private long userId_ ;
      /**
       * <pre>
       * 用户ID, 必要
       * </pre>
       *
       * <code>int64 user_id = 2;</code>
       */
      public long getUserId() {
        return userId_;
      }
      /**
       * <pre>
       * 用户ID, 必要
       * </pre>
       *
       * <code>int64 user_id = 2;</code>
       */
      public Builder setUserId(long value) {
        
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 用户ID, 必要
       * </pre>
       *
       * <code>int64 user_id = 2;</code>
       */
      public Builder clearUserId() {
        
        userId_ = 0L;
        onChanged();
        return this;
      }

      private Object nickname_ = "";
      /**
       * <pre>
       * 角色昵称 必要
       * </pre>
       *
       * <code>string nickname = 3;</code>
       */
      public String getNickname() {
        Object ref = nickname_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          nickname_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 角色昵称 必要
       * </pre>
       *
       * <code>string nickname = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNicknameBytes() {
        Object ref = nickname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          nickname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 角色昵称 必要
       * </pre>
       *
       * <code>string nickname = 3;</code>
       */
      public Builder setNickname(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nickname_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 角色昵称 必要
       * </pre>
       *
       * <code>string nickname = 3;</code>
       */
      public Builder clearNickname() {
        
        nickname_ = getDefaultInstance().getNickname();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 角色昵称 必要
       * </pre>
       *
       * <code>string nickname = 3;</code>
       */
      public Builder setNicknameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nickname_ = value;
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <pre>
       * 角色等级，必要
       * </pre>
       *
       * <code>int32 level = 4;</code>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <pre>
       * 角色等级，必要
       * </pre>
       *
       * <code>int32 level = 4;</code>
       */
      public Builder setLevel(int value) {
        
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 角色等级，必要
       * </pre>
       *
       * <code>int32 level = 4;</code>
       */
      public Builder clearLevel() {
        
        level_ = 0;
        onChanged();
        return this;
      }

      private int vipLevel_ ;
      /**
       * <pre>
       * 角色VIP等级 非必要
       * </pre>
       *
       * <code>int32 vip_level = 5;</code>
       */
      public int getVipLevel() {
        return vipLevel_;
      }
      /**
       * <pre>
       * 角色VIP等级 非必要
       * </pre>
       *
       * <code>int32 vip_level = 5;</code>
       */
      public Builder setVipLevel(int value) {
        
        vipLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 角色VIP等级 非必要
       * </pre>
       *
       * <code>int32 vip_level = 5;</code>
       */
      public Builder clearVipLevel() {
        
        vipLevel_ = 0;
        onChanged();
        return this;
      }

      private long power_ ;
      /**
       * <pre>
       * 角色战力值 非必要
       * </pre>
       *
       * <code>int64 power = 6;</code>
       */
      public long getPower() {
        return power_;
      }
      /**
       * <pre>
       * 角色战力值 非必要
       * </pre>
       *
       * <code>int64 power = 6;</code>
       */
      public Builder setPower(long value) {
        
        power_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 角色战力值 非必要
       * </pre>
       *
       * <code>int64 power = 6;</code>
       */
      public Builder clearPower() {
        
        power_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ChatUser)
    }

    // @@protoc_insertion_point(class_scope:ChatUser)
    private static final ChatUser DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ChatUser();
    }

    public static ChatUser getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChatUser>
        PARSER = new com.google.protobuf.AbstractParser<ChatUser>() {
      public ChatUser parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChatUser(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChatUser> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ChatUser> getParserForType() {
      return PARSER;
    }

    public ChatUser getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Chat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 消息ID, 非必要
     * </pre>
     *
     * <code>int64 mid = 1;</code>
     */
    long getMid();

    /**
     * <pre>
     *消息频道 必要
     * </pre>
     *
     * <code>int32 channel = 2;</code>
     */
    int getChannel();

    /**
     * <pre>
     * 发言人
     * </pre>
     *
     * <code>.ChatUser from = 3;</code>
     */
    boolean hasFrom();
    /**
     * <pre>
     * 发言人
     * </pre>
     *
     * <code>.ChatUser from = 3;</code>
     */
    ChatUser getFrom();
    /**
     * <pre>
     * 发言人
     * </pre>
     *
     * <code>.ChatUser from = 3;</code>
     */
    ChatUserOrBuilder getFromOrBuilder();

    /**
     * <pre>
     * 发送给谁，私聊时必要
     * </pre>
     *
     * <code>.ChatUser to = 4;</code>
     */
    boolean hasTo();
    /**
     * <pre>
     * 发送给谁，私聊时必要
     * </pre>
     *
     * <code>.ChatUser to = 4;</code>
     */
    ChatUser getTo();
    /**
     * <pre>
     * 发送给谁，私聊时必要
     * </pre>
     *
     * <code>.ChatUser to = 4;</code>
     */
    ChatUserOrBuilder getToOrBuilder();

    /**
     * <pre>
     *内容 必要
     * </pre>
     *
     * <code>string content = 5;</code>
     */
    String getContent();
    /**
     * <pre>
     *内容 必要
     * </pre>
     *
     * <code>string content = 5;</code>
     */
    com.google.protobuf.ByteString
        getContentBytes();

    /**
     * <pre>
     * 区服ID 必要
     * </pre>
     *
     * <code>int32 zone_id = 6;</code>
     */
    int getZoneId();

    /**
     * <pre>
     *区服名字 必要
     * </pre>
     *
     * <code>string zone_name = 7;</code>
     */
    String getZoneName();
    /**
     * <pre>
     *区服名字 必要
     * </pre>
     *
     * <code>string zone_name = 7;</code>
     */
    com.google.protobuf.ByteString
        getZoneNameBytes();

    /**
     * <pre>
     * 当前发言人的IP 必要
     * </pre>
     *
     * <code>string ip = 8;</code>
     */
    String getIp();
    /**
     * <pre>
     * 当前发言人的IP 必要
     * </pre>
     *
     * <code>string ip = 8;</code>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    /**
     * <pre>
     * 是否深极违禁
     * </pre>
     *
     * <code>int32 banned = 9;</code>
     */
    int getBanned();

    /**
     * <pre>
     * JSON组成的其它信息
     * </pre>
     *
     * <code>string extra = 10;</code>
     */
    String getExtra();
    /**
     * <pre>
     * JSON组成的其它信息
     * </pre>
     *
     * <code>string extra = 10;</code>
     */
    com.google.protobuf.ByteString
        getExtraBytes();
  }
  /**
   * Protobuf type {@code Chat}
   */
  public  static final class Chat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Chat)
      ChatOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Chat.newBuilder() to construct.
    private Chat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Chat() {
      mid_ = 0L;
      channel_ = 0;
      content_ = "";
      zoneId_ = 0;
      zoneName_ = "";
      ip_ = "";
      banned_ = 0;
      extra_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Chat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              mid_ = input.readInt64();
              break;
            }
            case 16: {

              channel_ = input.readInt32();
              break;
            }
            case 26: {
              ChatUser.Builder subBuilder = null;
              if (from_ != null) {
                subBuilder = from_.toBuilder();
              }
              from_ = input.readMessage(ChatUser.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(from_);
                from_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              ChatUser.Builder subBuilder = null;
              if (to_ != null) {
                subBuilder = to_.toBuilder();
              }
              to_ = input.readMessage(ChatUser.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(to_);
                to_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              content_ = s;
              break;
            }
            case 48: {

              zoneId_ = input.readInt32();
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();

              zoneName_ = s;
              break;
            }
            case 66: {
              String s = input.readStringRequireUtf8();

              ip_ = s;
              break;
            }
            case 72: {

              banned_ = input.readInt32();
              break;
            }
            case 82: {
              String s = input.readStringRequireUtf8();

              extra_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ChatOuterClass.internal_static_Chat_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ChatOuterClass.internal_static_Chat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Chat.class, Builder.class);
    }

    public static final int MID_FIELD_NUMBER = 1;
    private long mid_;
    /**
     * <pre>
     * 消息ID, 非必要
     * </pre>
     *
     * <code>int64 mid = 1;</code>
     */
    public long getMid() {
      return mid_;
    }

    public static final int CHANNEL_FIELD_NUMBER = 2;
    private int channel_;
    /**
     * <pre>
     *消息频道 必要
     * </pre>
     *
     * <code>int32 channel = 2;</code>
     */
    public int getChannel() {
      return channel_;
    }

    public static final int FROM_FIELD_NUMBER = 3;
    private ChatUser from_;
    /**
     * <pre>
     * 发言人
     * </pre>
     *
     * <code>.ChatUser from = 3;</code>
     */
    public boolean hasFrom() {
      return from_ != null;
    }
    /**
     * <pre>
     * 发言人
     * </pre>
     *
     * <code>.ChatUser from = 3;</code>
     */
    public ChatUser getFrom() {
      return from_ == null ? ChatUser.getDefaultInstance() : from_;
    }
    /**
     * <pre>
     * 发言人
     * </pre>
     *
     * <code>.ChatUser from = 3;</code>
     */
    public ChatUserOrBuilder getFromOrBuilder() {
      return getFrom();
    }

    public static final int TO_FIELD_NUMBER = 4;
    private ChatUser to_;
    /**
     * <pre>
     * 发送给谁，私聊时必要
     * </pre>
     *
     * <code>.ChatUser to = 4;</code>
     */
    public boolean hasTo() {
      return to_ != null;
    }
    /**
     * <pre>
     * 发送给谁，私聊时必要
     * </pre>
     *
     * <code>.ChatUser to = 4;</code>
     */
    public ChatUser getTo() {
      return to_ == null ? ChatUser.getDefaultInstance() : to_;
    }
    /**
     * <pre>
     * 发送给谁，私聊时必要
     * </pre>
     *
     * <code>.ChatUser to = 4;</code>
     */
    public ChatUserOrBuilder getToOrBuilder() {
      return getTo();
    }

    public static final int CONTENT_FIELD_NUMBER = 5;
    private volatile Object content_;
    /**
     * <pre>
     *内容 必要
     * </pre>
     *
     * <code>string content = 5;</code>
     */
    public String getContent() {
      Object ref = content_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        content_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *内容 必要
     * </pre>
     *
     * <code>string content = 5;</code>
     */
    public com.google.protobuf.ByteString
        getContentBytes() {
      Object ref = content_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        content_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ZONE_ID_FIELD_NUMBER = 6;
    private int zoneId_;
    /**
     * <pre>
     * 区服ID 必要
     * </pre>
     *
     * <code>int32 zone_id = 6;</code>
     */
    public int getZoneId() {
      return zoneId_;
    }

    public static final int ZONE_NAME_FIELD_NUMBER = 7;
    private volatile Object zoneName_;
    /**
     * <pre>
     *区服名字 必要
     * </pre>
     *
     * <code>string zone_name = 7;</code>
     */
    public String getZoneName() {
      Object ref = zoneName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        zoneName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *区服名字 必要
     * </pre>
     *
     * <code>string zone_name = 7;</code>
     */
    public com.google.protobuf.ByteString
        getZoneNameBytes() {
      Object ref = zoneName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        zoneName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IP_FIELD_NUMBER = 8;
    private volatile Object ip_;
    /**
     * <pre>
     * 当前发言人的IP 必要
     * </pre>
     *
     * <code>string ip = 8;</code>
     */
    public String getIp() {
      Object ref = ip_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        ip_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 当前发言人的IP 必要
     * </pre>
     *
     * <code>string ip = 8;</code>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      Object ref = ip_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BANNED_FIELD_NUMBER = 9;
    private int banned_;
    /**
     * <pre>
     * 是否深极违禁
     * </pre>
     *
     * <code>int32 banned = 9;</code>
     */
    public int getBanned() {
      return banned_;
    }

    public static final int EXTRA_FIELD_NUMBER = 10;
    private volatile Object extra_;
    /**
     * <pre>
     * JSON组成的其它信息
     * </pre>
     *
     * <code>string extra = 10;</code>
     */
    public String getExtra() {
      Object ref = extra_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        extra_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * JSON组成的其它信息
     * </pre>
     *
     * <code>string extra = 10;</code>
     */
    public com.google.protobuf.ByteString
        getExtraBytes() {
      Object ref = extra_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        extra_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mid_ != 0L) {
        output.writeInt64(1, mid_);
      }
      if (channel_ != 0) {
        output.writeInt32(2, channel_);
      }
      if (from_ != null) {
        output.writeMessage(3, getFrom());
      }
      if (to_ != null) {
        output.writeMessage(4, getTo());
      }
      if (!getContentBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, content_);
      }
      if (zoneId_ != 0) {
        output.writeInt32(6, zoneId_);
      }
      if (!getZoneNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, zoneName_);
      }
      if (!getIpBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, ip_);
      }
      if (banned_ != 0) {
        output.writeInt32(9, banned_);
      }
      if (!getExtraBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, extra_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mid_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, mid_);
      }
      if (channel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, channel_);
      }
      if (from_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFrom());
      }
      if (to_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTo());
      }
      if (!getContentBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, content_);
      }
      if (zoneId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, zoneId_);
      }
      if (!getZoneNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, zoneName_);
      }
      if (!getIpBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, ip_);
      }
      if (banned_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, banned_);
      }
      if (!getExtraBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, extra_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Chat)) {
        return super.equals(obj);
      }
      Chat other = (Chat) obj;

      boolean result = true;
      result = result && (getMid()
          == other.getMid());
      result = result && (getChannel()
          == other.getChannel());
      result = result && (hasFrom() == other.hasFrom());
      if (hasFrom()) {
        result = result && getFrom()
            .equals(other.getFrom());
      }
      result = result && (hasTo() == other.hasTo());
      if (hasTo()) {
        result = result && getTo()
            .equals(other.getTo());
      }
      result = result && getContent()
          .equals(other.getContent());
      result = result && (getZoneId()
          == other.getZoneId());
      result = result && getZoneName()
          .equals(other.getZoneName());
      result = result && getIp()
          .equals(other.getIp());
      result = result && (getBanned()
          == other.getBanned());
      result = result && getExtra()
          .equals(other.getExtra());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMid());
      hash = (37 * hash) + CHANNEL_FIELD_NUMBER;
      hash = (53 * hash) + getChannel();
      if (hasFrom()) {
        hash = (37 * hash) + FROM_FIELD_NUMBER;
        hash = (53 * hash) + getFrom().hashCode();
      }
      if (hasTo()) {
        hash = (37 * hash) + TO_FIELD_NUMBER;
        hash = (53 * hash) + getTo().hashCode();
      }
      hash = (37 * hash) + CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getContent().hashCode();
      hash = (37 * hash) + ZONE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getZoneId();
      hash = (37 * hash) + ZONE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getZoneName().hashCode();
      hash = (37 * hash) + IP_FIELD_NUMBER;
      hash = (53 * hash) + getIp().hashCode();
      hash = (37 * hash) + BANNED_FIELD_NUMBER;
      hash = (53 * hash) + getBanned();
      hash = (37 * hash) + EXTRA_FIELD_NUMBER;
      hash = (53 * hash) + getExtra().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Chat parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Chat parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Chat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Chat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Chat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Chat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Chat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Chat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Chat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Chat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Chat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Chat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Chat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Chat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Chat)
        ChatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ChatOuterClass.internal_static_Chat_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ChatOuterClass.internal_static_Chat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Chat.class, Builder.class);
      }

      // Construct using ares.logic.msg.checker.ChatOuterClass.Chat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        mid_ = 0L;

        channel_ = 0;

        if (fromBuilder_ == null) {
          from_ = null;
        } else {
          from_ = null;
          fromBuilder_ = null;
        }
        if (toBuilder_ == null) {
          to_ = null;
        } else {
          to_ = null;
          toBuilder_ = null;
        }
        content_ = "";

        zoneId_ = 0;

        zoneName_ = "";

        ip_ = "";

        banned_ = 0;

        extra_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ChatOuterClass.internal_static_Chat_descriptor;
      }

      public Chat getDefaultInstanceForType() {
        return Chat.getDefaultInstance();
      }

      public Chat build() {
        Chat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Chat buildPartial() {
        Chat result = new Chat(this);
        result.mid_ = mid_;
        result.channel_ = channel_;
        if (fromBuilder_ == null) {
          result.from_ = from_;
        } else {
          result.from_ = fromBuilder_.build();
        }
        if (toBuilder_ == null) {
          result.to_ = to_;
        } else {
          result.to_ = toBuilder_.build();
        }
        result.content_ = content_;
        result.zoneId_ = zoneId_;
        result.zoneName_ = zoneName_;
        result.ip_ = ip_;
        result.banned_ = banned_;
        result.extra_ = extra_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Chat) {
          return mergeFrom((Chat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Chat other) {
        if (other == Chat.getDefaultInstance()) return this;
        if (other.getMid() != 0L) {
          setMid(other.getMid());
        }
        if (other.getChannel() != 0) {
          setChannel(other.getChannel());
        }
        if (other.hasFrom()) {
          mergeFrom(other.getFrom());
        }
        if (other.hasTo()) {
          mergeTo(other.getTo());
        }
        if (!other.getContent().isEmpty()) {
          content_ = other.content_;
          onChanged();
        }
        if (other.getZoneId() != 0) {
          setZoneId(other.getZoneId());
        }
        if (!other.getZoneName().isEmpty()) {
          zoneName_ = other.zoneName_;
          onChanged();
        }
        if (!other.getIp().isEmpty()) {
          ip_ = other.ip_;
          onChanged();
        }
        if (other.getBanned() != 0) {
          setBanned(other.getBanned());
        }
        if (!other.getExtra().isEmpty()) {
          extra_ = other.extra_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Chat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Chat) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long mid_ ;
      /**
       * <pre>
       * 消息ID, 非必要
       * </pre>
       *
       * <code>int64 mid = 1;</code>
       */
      public long getMid() {
        return mid_;
      }
      /**
       * <pre>
       * 消息ID, 非必要
       * </pre>
       *
       * <code>int64 mid = 1;</code>
       */
      public Builder setMid(long value) {
        
        mid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息ID, 非必要
       * </pre>
       *
       * <code>int64 mid = 1;</code>
       */
      public Builder clearMid() {
        
        mid_ = 0L;
        onChanged();
        return this;
      }

      private int channel_ ;
      /**
       * <pre>
       *消息频道 必要
       * </pre>
       *
       * <code>int32 channel = 2;</code>
       */
      public int getChannel() {
        return channel_;
      }
      /**
       * <pre>
       *消息频道 必要
       * </pre>
       *
       * <code>int32 channel = 2;</code>
       */
      public Builder setChannel(int value) {
        
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息频道 必要
       * </pre>
       *
       * <code>int32 channel = 2;</code>
       */
      public Builder clearChannel() {
        
        channel_ = 0;
        onChanged();
        return this;
      }

      private ChatUser from_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ChatUser, ChatUser.Builder, ChatUserOrBuilder> fromBuilder_;
      /**
       * <pre>
       * 发言人
       * </pre>
       *
       * <code>.ChatUser from = 3;</code>
       */
      public boolean hasFrom() {
        return fromBuilder_ != null || from_ != null;
      }
      /**
       * <pre>
       * 发言人
       * </pre>
       *
       * <code>.ChatUser from = 3;</code>
       */
      public ChatUser getFrom() {
        if (fromBuilder_ == null) {
          return from_ == null ? ChatUser.getDefaultInstance() : from_;
        } else {
          return fromBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 发言人
       * </pre>
       *
       * <code>.ChatUser from = 3;</code>
       */
      public Builder setFrom(ChatUser value) {
        if (fromBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          from_ = value;
          onChanged();
        } else {
          fromBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 发言人
       * </pre>
       *
       * <code>.ChatUser from = 3;</code>
       */
      public Builder setFrom(
          ChatUser.Builder builderForValue) {
        if (fromBuilder_ == null) {
          from_ = builderForValue.build();
          onChanged();
        } else {
          fromBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 发言人
       * </pre>
       *
       * <code>.ChatUser from = 3;</code>
       */
      public Builder mergeFrom(ChatUser value) {
        if (fromBuilder_ == null) {
          if (from_ != null) {
            from_ =
              ChatUser.newBuilder(from_).mergeFrom(value).buildPartial();
          } else {
            from_ = value;
          }
          onChanged();
        } else {
          fromBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 发言人
       * </pre>
       *
       * <code>.ChatUser from = 3;</code>
       */
      public Builder clearFrom() {
        if (fromBuilder_ == null) {
          from_ = null;
          onChanged();
        } else {
          from_ = null;
          fromBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 发言人
       * </pre>
       *
       * <code>.ChatUser from = 3;</code>
       */
      public ChatUser.Builder getFromBuilder() {
        
        onChanged();
        return getFromFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 发言人
       * </pre>
       *
       * <code>.ChatUser from = 3;</code>
       */
      public ChatUserOrBuilder getFromOrBuilder() {
        if (fromBuilder_ != null) {
          return fromBuilder_.getMessageOrBuilder();
        } else {
          return from_ == null ?
              ChatUser.getDefaultInstance() : from_;
        }
      }
      /**
       * <pre>
       * 发言人
       * </pre>
       *
       * <code>.ChatUser from = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ChatUser, ChatUser.Builder, ChatUserOrBuilder>
          getFromFieldBuilder() {
        if (fromBuilder_ == null) {
          fromBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ChatUser, ChatUser.Builder, ChatUserOrBuilder>(
                  getFrom(),
                  getParentForChildren(),
                  isClean());
          from_ = null;
        }
        return fromBuilder_;
      }

      private ChatUser to_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ChatUser, ChatUser.Builder, ChatUserOrBuilder> toBuilder_;
      /**
       * <pre>
       * 发送给谁，私聊时必要
       * </pre>
       *
       * <code>.ChatUser to = 4;</code>
       */
      public boolean hasTo() {
        return toBuilder_ != null || to_ != null;
      }
      /**
       * <pre>
       * 发送给谁，私聊时必要
       * </pre>
       *
       * <code>.ChatUser to = 4;</code>
       */
      public ChatUser getTo() {
        if (toBuilder_ == null) {
          return to_ == null ? ChatUser.getDefaultInstance() : to_;
        } else {
          return toBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 发送给谁，私聊时必要
       * </pre>
       *
       * <code>.ChatUser to = 4;</code>
       */
      public Builder setTo(ChatUser value) {
        if (toBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          to_ = value;
          onChanged();
        } else {
          toBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 发送给谁，私聊时必要
       * </pre>
       *
       * <code>.ChatUser to = 4;</code>
       */
      public Builder setTo(
          ChatUser.Builder builderForValue) {
        if (toBuilder_ == null) {
          to_ = builderForValue.build();
          onChanged();
        } else {
          toBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 发送给谁，私聊时必要
       * </pre>
       *
       * <code>.ChatUser to = 4;</code>
       */
      public Builder mergeTo(ChatUser value) {
        if (toBuilder_ == null) {
          if (to_ != null) {
            to_ =
              ChatUser.newBuilder(to_).mergeFrom(value).buildPartial();
          } else {
            to_ = value;
          }
          onChanged();
        } else {
          toBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 发送给谁，私聊时必要
       * </pre>
       *
       * <code>.ChatUser to = 4;</code>
       */
      public Builder clearTo() {
        if (toBuilder_ == null) {
          to_ = null;
          onChanged();
        } else {
          to_ = null;
          toBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 发送给谁，私聊时必要
       * </pre>
       *
       * <code>.ChatUser to = 4;</code>
       */
      public ChatUser.Builder getToBuilder() {
        
        onChanged();
        return getToFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 发送给谁，私聊时必要
       * </pre>
       *
       * <code>.ChatUser to = 4;</code>
       */
      public ChatUserOrBuilder getToOrBuilder() {
        if (toBuilder_ != null) {
          return toBuilder_.getMessageOrBuilder();
        } else {
          return to_ == null ?
              ChatUser.getDefaultInstance() : to_;
        }
      }
      /**
       * <pre>
       * 发送给谁，私聊时必要
       * </pre>
       *
       * <code>.ChatUser to = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ChatUser, ChatUser.Builder, ChatUserOrBuilder>
          getToFieldBuilder() {
        if (toBuilder_ == null) {
          toBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ChatUser, ChatUser.Builder, ChatUserOrBuilder>(
                  getTo(),
                  getParentForChildren(),
                  isClean());
          to_ = null;
        }
        return toBuilder_;
      }

      private Object content_ = "";
      /**
       * <pre>
       *内容 必要
       * </pre>
       *
       * <code>string content = 5;</code>
       */
      public String getContent() {
        Object ref = content_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          content_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *内容 必要
       * </pre>
       *
       * <code>string content = 5;</code>
       */
      public com.google.protobuf.ByteString
          getContentBytes() {
        Object ref = content_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          content_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *内容 必要
       * </pre>
       *
       * <code>string content = 5;</code>
       */
      public Builder setContent(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *内容 必要
       * </pre>
       *
       * <code>string content = 5;</code>
       */
      public Builder clearContent() {
        
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *内容 必要
       * </pre>
       *
       * <code>string content = 5;</code>
       */
      public Builder setContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        content_ = value;
        onChanged();
        return this;
      }

      private int zoneId_ ;
      /**
       * <pre>
       * 区服ID 必要
       * </pre>
       *
       * <code>int32 zone_id = 6;</code>
       */
      public int getZoneId() {
        return zoneId_;
      }
      /**
       * <pre>
       * 区服ID 必要
       * </pre>
       *
       * <code>int32 zone_id = 6;</code>
       */
      public Builder setZoneId(int value) {
        
        zoneId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 区服ID 必要
       * </pre>
       *
       * <code>int32 zone_id = 6;</code>
       */
      public Builder clearZoneId() {
        
        zoneId_ = 0;
        onChanged();
        return this;
      }

      private Object zoneName_ = "";
      /**
       * <pre>
       *区服名字 必要
       * </pre>
       *
       * <code>string zone_name = 7;</code>
       */
      public String getZoneName() {
        Object ref = zoneName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          zoneName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *区服名字 必要
       * </pre>
       *
       * <code>string zone_name = 7;</code>
       */
      public com.google.protobuf.ByteString
          getZoneNameBytes() {
        Object ref = zoneName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          zoneName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *区服名字 必要
       * </pre>
       *
       * <code>string zone_name = 7;</code>
       */
      public Builder setZoneName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        zoneName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *区服名字 必要
       * </pre>
       *
       * <code>string zone_name = 7;</code>
       */
      public Builder clearZoneName() {
        
        zoneName_ = getDefaultInstance().getZoneName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *区服名字 必要
       * </pre>
       *
       * <code>string zone_name = 7;</code>
       */
      public Builder setZoneNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        zoneName_ = value;
        onChanged();
        return this;
      }

      private Object ip_ = "";
      /**
       * <pre>
       * 当前发言人的IP 必要
       * </pre>
       *
       * <code>string ip = 8;</code>
       */
      public String getIp() {
        Object ref = ip_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 当前发言人的IP 必要
       * </pre>
       *
       * <code>string ip = 8;</code>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 当前发言人的IP 必要
       * </pre>
       *
       * <code>string ip = 8;</code>
       */
      public Builder setIp(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 当前发言人的IP 必要
       * </pre>
       *
       * <code>string ip = 8;</code>
       */
      public Builder clearIp() {
        
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 当前发言人的IP 必要
       * </pre>
       *
       * <code>string ip = 8;</code>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ip_ = value;
        onChanged();
        return this;
      }

      private int banned_ ;
      /**
       * <pre>
       * 是否深极违禁
       * </pre>
       *
       * <code>int32 banned = 9;</code>
       */
      public int getBanned() {
        return banned_;
      }
      /**
       * <pre>
       * 是否深极违禁
       * </pre>
       *
       * <code>int32 banned = 9;</code>
       */
      public Builder setBanned(int value) {
        
        banned_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 是否深极违禁
       * </pre>
       *
       * <code>int32 banned = 9;</code>
       */
      public Builder clearBanned() {
        
        banned_ = 0;
        onChanged();
        return this;
      }

      private Object extra_ = "";
      /**
       * <pre>
       * JSON组成的其它信息
       * </pre>
       *
       * <code>string extra = 10;</code>
       */
      public String getExtra() {
        Object ref = extra_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          extra_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * JSON组成的其它信息
       * </pre>
       *
       * <code>string extra = 10;</code>
       */
      public com.google.protobuf.ByteString
          getExtraBytes() {
        Object ref = extra_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          extra_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * JSON组成的其它信息
       * </pre>
       *
       * <code>string extra = 10;</code>
       */
      public Builder setExtra(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        extra_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * JSON组成的其它信息
       * </pre>
       *
       * <code>string extra = 10;</code>
       */
      public Builder clearExtra() {
        
        extra_ = getDefaultInstance().getExtra();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * JSON组成的其它信息
       * </pre>
       *
       * <code>string extra = 10;</code>
       */
      public Builder setExtraBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        extra_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Chat)
    }

    // @@protoc_insertion_point(class_scope:Chat)
    private static final Chat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Chat();
    }

    public static Chat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Chat>
        PARSER = new com.google.protobuf.AbstractParser<Chat>() {
      public Chat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Chat(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Chat> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Chat> getParserForType() {
      return PARSER;
    }

    public Chat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ChatUser_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ChatUser_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Chat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Chat_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\nChat.proto\"q\n\010ChatUser\022\021\n\tplayer_id\030\001 " +
      "\001(\003\022\017\n\007user_id\030\002 \001(\003\022\020\n\010nickname\030\003 \001(\t\022\r" +
      "\n\005level\030\004 \001(\005\022\021\n\tvip_level\030\005 \001(\005\022\r\n\005powe" +
      "r\030\006 \001(\003\"\264\001\n\004Chat\022\013\n\003mid\030\001 \001(\003\022\017\n\007channel" +
      "\030\002 \001(\005\022\027\n\004from\030\003 \001(\0132\t.ChatUser\022\025\n\002to\030\004 " +
      "\001(\0132\t.ChatUser\022\017\n\007content\030\005 \001(\t\022\017\n\007zone_" +
      "id\030\006 \001(\005\022\021\n\tzone_name\030\007 \001(\t\022\n\n\002ip\030\010 \001(\t\022" +
      "\016\n\006banned\030\t \001(\005\022\r\n\005extra\030\n \001(\tB\030\n\026ares.l" +
      "ogic.msg.checkerb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_ChatUser_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ChatUser_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ChatUser_descriptor,
        new String[] { "PlayerId", "UserId", "Nickname", "Level", "VipLevel", "Power", });
    internal_static_Chat_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Chat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Chat_descriptor,
        new String[] { "Mid", "Channel", "From", "To", "Content", "ZoneId", "ZoneName", "Ip", "Banned", "Extra", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
